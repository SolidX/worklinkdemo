{"file":"/Users/ao60/Desktop/WorkFiles/WorklinkDemo/src/Redux/__tests__/drag-drop-tests.tsx","mappings":";;;;;;;;;AAAA,wDAAkE;AAClE,kEAAoD;AAGpD,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE;IACjC,EAAE,CAAC,oDAAoD,EAAE,GAAG,EAAE;QAC5D,MAAM,QAAQ,GAAG,UAAU,CAAC;QAC5B,MAAM,cAAc,GAAG;YACrB,IAAI,+DAAgC;YACpC,OAAO,EAAE,EAAE,QAAQ,EAAE;SACtB,CAAC;QACF,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QACnE,+EAA+E;IACjF,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAClC,gDAAgD;IAChD,4DAA4D;IAC5D,sBAAsB;IACtB,QAAQ;IACR,MAAM;IACN,EAAE,CAAC,sBAAsB,EAAE,GAAG,EAAE;QAC9B,MAAM,CACJ,kBAAO,mBAEA,uBAAY,GAEjB;YACE,IAAI,+DAAgC;YACpC,OAAO,EAAE;gBACP,QAAQ,EAAE,SAAS;aACpB;SACF,CACF,CACF,CAAC,OAAO,CAAC;YACR,WAAW,EAAE,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,CAAC;YAChC,KAAK,EAAE,EAAE;SACV,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yBAAyB,EAAE,GAAG,EAAE;QACjC,MAAM,CACJ,kBAAO,CACL;YACE,WAAW,EAAE,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE,CAAC;YACnD,KAAK,EAAE,EAAE;SACV,EACD;YACE,IAAI,+DAAgC;YACpC,OAAO,EAAE;gBACP,QAAQ,EAAE,SAAS;aACpB;SACF,CACF,CACF,CAAC,OAAO,CAAC;YACR,WAAW,EAAE,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,CAAC;YAChC,KAAK,EAAE,EAAE;SACV,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/ao60/Desktop/WorkFiles/WorklinkDemo/src/Redux/__tests__/drag-drop-tests.tsx"],"sourcesContent":["import { initialState, reducer } from '../drag-and-drop/reducers';\nimport * as actions from '../drag-and-drop/actions';\nimport { ActionTypes } from '../drag-and-drop/types';\n\ndescribe('drag-drop actions', () => {\n  it('should create an action to select a team member id', () => {\n    const memberId = '18000003';\n    const expectedAction = {\n      type: ActionTypes.TOGGLE_TEAM_MEMBER,\n      payload: { memberId }\n    };\n    expect(actions.toggleTeamMember(memberId)).toEqual(expectedAction);\n    // expect(reducer(initialState, selectTeamMember(memberId))).toMatchSnapshot();\n  });\n});\n\ndescribe('drag-drop reducers', () => {\n  // it('should return the initial state', () => {\n  //   expect(reducer(undefined, {type: undefined})).toEqual({\n  //     ...initialState\n  //   });\n  // });\n  it('should add member id', () => {\n    expect(\n      reducer(\n        {\n          ...initialState\n        },\n        {\n          type: ActionTypes.TOGGLE_TEAM_MEMBER,\n          payload: {\n            memberId: '1800004'\n          }\n        }\n      )\n    ).toEqual({\n      teamMembers: [{ id: '1800004' }],\n      error: ''\n    });\n  });\n\n  it('should remove member id', () => {\n    expect(\n      reducer(\n        {\n          teamMembers: [{ id: '1800004' }, { id: '1800008' }],\n          error: ''\n        },\n        {\n          type: ActionTypes.TOGGLE_TEAM_MEMBER,\n          payload: {\n            memberId: '1800008'\n          }\n        }\n      )\n    ).toEqual({\n      teamMembers: [{ id: '1800004' }],\n      error: ''\n    });\n  });\n});\n"],"version":3}