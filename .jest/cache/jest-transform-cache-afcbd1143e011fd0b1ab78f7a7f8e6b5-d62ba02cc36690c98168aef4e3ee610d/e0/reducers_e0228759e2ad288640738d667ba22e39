4ef28b5eba2f0a30da6b518a60f85407
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

const types_1 = require("./types");

exports.initialState = {
  teamMembers: [],
  error: ''
};

exports.reducer = (state = exports.initialState, action) => {
  const {
    teamMembers
  } = state;
  const SELECT = types_1.ActionTypes.SELECT_TEAM_MEMBER;
  const UNSELECT = types_1.ActionTypes.UNSELECT_TEAM_MEMBER;

  switch (action.type) {
    case SELECT || UNSELECT:
      const memberId = action.payload.memberId; // check if member is already in the team

      const memberIdPresent = teamMembers.some(member => member.id === memberId); // add member if not already there

      if (!memberIdPresent && SELECT) {
        return Object.assign({}, state, {
          teamMembers: [...state.teamMembers, {
            id: action.payload.memberId
          }]
        }); // remove member if already there
      } else if (memberIdPresent && UNSELECT) {
        return Object.assign({}, state, {
          teamMembers: teamMembers.filter(member => member.id !== memberId)
        });
      } else {
        return Object.assign({}, state, {
          error: 'oops'
        });
      }

    default:
      return state;
  }
}; //# sourceMappingURL=reducers.js.map
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZHVjZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUNBLE1BQUEsT0FBQSxHQUFBLE9BQUEsQ0FBQSxTQUFBLENBQUE7O0FBR2EsT0FBQSxDQUFBLFlBQUEsR0FBaUM7QUFDNUMsRUFBQSxXQUFXLEVBQUUsRUFEK0I7QUFFNUMsRUFBQSxLQUFLLEVBQUU7QUFGcUMsQ0FBakM7O0FBS0EsT0FBQSxDQUFBLE9BQUEsR0FBVSxDQUNyQixLQUFBLEdBQTBCLE9BQUEsQ0FBQSxZQURMLEVBRXJCLE1BRnFCLEtBR25CO0FBQ0YsUUFBTTtBQUFFLElBQUE7QUFBRixNQUFrQixLQUF4QjtBQUNBLFFBQU0sTUFBTSxHQUFHLE9BQUEsQ0FBQSxXQUFBLENBQVksa0JBQTNCO0FBQ0EsUUFBTSxRQUFRLEdBQUcsT0FBQSxDQUFBLFdBQUEsQ0FBWSxvQkFBN0I7O0FBQ0EsVUFBUSxNQUFNLENBQUMsSUFBZjtBQUNFLFNBQUssTUFBTSxJQUFJLFFBQWY7QUFDRSxZQUFNLFFBQVEsR0FBRyxNQUFNLENBQUMsT0FBUCxDQUFlLFFBQWhDLENBREYsQ0FFRTs7QUFDQSxZQUFNLGVBQWUsR0FBRyxXQUFXLENBQUMsSUFBWixDQUN0QixNQUFNLElBQUksTUFBTSxDQUFDLEVBQVAsS0FBYyxRQURGLENBQXhCLENBSEYsQ0FNRTs7QUFDQSxVQUFJLENBQUMsZUFBRCxJQUFvQixNQUF4QixFQUFnQztBQUM5QixlQUFBLE1BQUEsQ0FBQSxNQUFBLENBQUEsRUFBQSxFQUNLLEtBREwsRUFDVTtBQUNSLFVBQUEsV0FBVyxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUMsV0FBVixFQUF1QjtBQUFFLFlBQUEsRUFBRSxFQUFFLE1BQU0sQ0FBQyxPQUFQLENBQWU7QUFBckIsV0FBdkI7QUFETCxTQURWLENBQUEsQ0FEOEIsQ0FLOUI7QUFDRCxPQU5ELE1BTU8sSUFBSSxlQUFlLElBQUksUUFBdkIsRUFBaUM7QUFDdEMsZUFBQSxNQUFBLENBQUEsTUFBQSxDQUFBLEVBQUEsRUFDSyxLQURMLEVBQ1U7QUFDUixVQUFBLFdBQVcsRUFBRSxXQUFXLENBQUMsTUFBWixDQUFtQixNQUFNLElBQUksTUFBTSxDQUFDLEVBQVAsS0FBYyxRQUEzQztBQURMLFNBRFYsQ0FBQTtBQUlELE9BTE0sTUFLQTtBQUNMLGVBQUEsTUFBQSxDQUFBLE1BQUEsQ0FBQSxFQUFBLEVBQVksS0FBWixFQUFpQjtBQUFFLFVBQUEsS0FBSyxFQUFFO0FBQVQsU0FBakIsQ0FBQTtBQUNEOztBQUNIO0FBQ0UsYUFBTyxLQUFQO0FBdkJKO0FBeUJELENBaENZLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBY3Rpb24gfSBmcm9tICcuL2FjdGlvbnMnO1xuaW1wb3J0IHsgQWN0aW9uVHlwZXMgfSBmcm9tICcuL3R5cGVzJztcbmltcG9ydCB7IElTdXBlclF1ZXVlUHJvcHMgfSBmcm9tICcuLi8uLi9SZWFjdC9zY3JlZW5zL1N1cGVydmlzb3JRdWV1ZVNjcmVlbic7XG5cbmV4cG9ydCBjb25zdCBpbml0aWFsU3RhdGU6IElTdXBlclF1ZXVlUHJvcHMgPSB7XG4gIHRlYW1NZW1iZXJzOiBbXSxcbiAgZXJyb3I6ICcnXG59O1xuXG5leHBvcnQgY29uc3QgcmVkdWNlciA9IChcbiAgc3RhdGU6IElTdXBlclF1ZXVlUHJvcHMgPSBpbml0aWFsU3RhdGUsXG4gIGFjdGlvbjogQWN0aW9uXG4pID0+IHtcbiAgY29uc3QgeyB0ZWFtTWVtYmVycyB9ID0gc3RhdGU7XG4gIGNvbnN0IFNFTEVDVCA9IEFjdGlvblR5cGVzLlNFTEVDVF9URUFNX01FTUJFUjtcbiAgY29uc3QgVU5TRUxFQ1QgPSBBY3Rpb25UeXBlcy5VTlNFTEVDVF9URUFNX01FTUJFUjtcbiAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgIGNhc2UgU0VMRUNUIHx8IFVOU0VMRUNUOlxuICAgICAgY29uc3QgbWVtYmVySWQgPSBhY3Rpb24ucGF5bG9hZC5tZW1iZXJJZDtcbiAgICAgIC8vIGNoZWNrIGlmIG1lbWJlciBpcyBhbHJlYWR5IGluIHRoZSB0ZWFtXG4gICAgICBjb25zdCBtZW1iZXJJZFByZXNlbnQgPSB0ZWFtTWVtYmVycy5zb21lKFxuICAgICAgICBtZW1iZXIgPT4gbWVtYmVyLmlkID09PSBtZW1iZXJJZFxuICAgICAgKTtcbiAgICAgIC8vIGFkZCBtZW1iZXIgaWYgbm90IGFscmVhZHkgdGhlcmVcbiAgICAgIGlmICghbWVtYmVySWRQcmVzZW50ICYmIFNFTEVDVCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgIHRlYW1NZW1iZXJzOiBbLi4uc3RhdGUudGVhbU1lbWJlcnMsIHsgaWQ6IGFjdGlvbi5wYXlsb2FkLm1lbWJlcklkIH1dXG4gICAgICAgIH07XG4gICAgICAgIC8vIHJlbW92ZSBtZW1iZXIgaWYgYWxyZWFkeSB0aGVyZVxuICAgICAgfSBlbHNlIGlmIChtZW1iZXJJZFByZXNlbnQgJiYgVU5TRUxFQ1QpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICB0ZWFtTWVtYmVyczogdGVhbU1lbWJlcnMuZmlsdGVyKG1lbWJlciA9PiBtZW1iZXIuaWQgIT09IG1lbWJlcklkKVxuICAgICAgICB9O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHsgLi4uc3RhdGUsIGVycm9yOiAnb29wcycgfTtcbiAgICAgIH1cbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIHN0YXRlO1xuICB9XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==