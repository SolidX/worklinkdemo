e0a44c70025fa866588c20d9e2864e73
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

const types_1 = require("./types");

exports.initialState = {
  teamMembers: [],
  error: ''
};

exports.reducer = (state = exports.initialState, action) => {
  const {
    teamMembers
  } = state;
  const SELECT = types_1.ActionTypes.SELECT_TEAM_MEMBER;
  const UNSELECT = types_1.ActionTypes.UNSELECT_TEAM_MEMBER;

  switch (action.type) {
    case SELECT || UNSELECT:
      const memberId = action.payload.memberId; // check if member is already in the team

      const memberIdPresent = teamMembers.some(member => member.id === memberId); // add member if not already there

      if (!memberIdPresent && SELECT) {
        return Object.assign({}, state, {
          teamMembers: [...state.teamMembers, {
            id: action.payload.memberId
          }]
        }); // remove member if already there
      } else if (memberIdPresent && UNSELECT) {
        return Object.assign({}, state, {
          teamMembers: teamMembers.filter(member => member.id !== memberId)
        });
      } else {
        return Object.assign({}, state, {
          error: 'oops'
        });
      }

    // case ActionTypes.ASSIGN_TEAM:
    //   return state.teamMembers;

    default:
      return state;
  }
}; //# sourceMappingURL=reducers.js.map
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZHVjZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUNBLE1BQUEsT0FBQSxHQUFBLE9BQUEsQ0FBQSxTQUFBLENBQUE7O0FBR2EsT0FBQSxDQUFBLFlBQUEsR0FBaUM7QUFDNUMsRUFBQSxXQUFXLEVBQUUsRUFEK0I7QUFFNUMsRUFBQSxLQUFLLEVBQUU7QUFGcUMsQ0FBakM7O0FBS0EsT0FBQSxDQUFBLE9BQUEsR0FBVSxDQUNyQixLQUFBLEdBQTBCLE9BQUEsQ0FBQSxZQURMLEVBRXJCLE1BRnFCLEtBR25CO0FBQ0YsUUFBTTtBQUFFLElBQUE7QUFBRixNQUFrQixLQUF4QjtBQUNBLFFBQU0sTUFBTSxHQUFHLE9BQUEsQ0FBQSxXQUFBLENBQVksa0JBQTNCO0FBQ0EsUUFBTSxRQUFRLEdBQUcsT0FBQSxDQUFBLFdBQUEsQ0FBWSxvQkFBN0I7O0FBQ0EsVUFBUSxNQUFNLENBQUMsSUFBZjtBQUNFLFNBQUssTUFBTSxJQUFJLFFBQWY7QUFDRSxZQUFNLFFBQVEsR0FBRyxNQUFNLENBQUMsT0FBUCxDQUFlLFFBQWhDLENBREYsQ0FFRTs7QUFDQSxZQUFNLGVBQWUsR0FBRyxXQUFXLENBQUMsSUFBWixDQUN0QixNQUFNLElBQUksTUFBTSxDQUFDLEVBQVAsS0FBYyxRQURGLENBQXhCLENBSEYsQ0FNRTs7QUFDQSxVQUFJLENBQUMsZUFBRCxJQUFvQixNQUF4QixFQUFnQztBQUM5QixlQUFBLE1BQUEsQ0FBQSxNQUFBLENBQUEsRUFBQSxFQUNLLEtBREwsRUFDVTtBQUNSLFVBQUEsV0FBVyxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUMsV0FBVixFQUF1QjtBQUFFLFlBQUEsRUFBRSxFQUFFLE1BQU0sQ0FBQyxPQUFQLENBQWU7QUFBckIsV0FBdkI7QUFETCxTQURWLENBQUEsQ0FEOEIsQ0FLOUI7QUFDRCxPQU5ELE1BTU8sSUFBSSxlQUFlLElBQUksUUFBdkIsRUFBaUM7QUFDdEMsZUFBQSxNQUFBLENBQUEsTUFBQSxDQUFBLEVBQUEsRUFDSyxLQURMLEVBQ1U7QUFDUixVQUFBLFdBQVcsRUFBRSxXQUFXLENBQUMsTUFBWixDQUFtQixNQUFNLElBQUksTUFBTSxDQUFDLEVBQVAsS0FBYyxRQUEzQztBQURMLFNBRFYsQ0FBQTtBQUlELE9BTE0sTUFLQTtBQUNMLGVBQUEsTUFBQSxDQUFBLE1BQUEsQ0FBQSxFQUFBLEVBQVksS0FBWixFQUFpQjtBQUFFLFVBQUEsS0FBSyxFQUFFO0FBQVQsU0FBakIsQ0FBQTtBQUNEOztBQUNIO0FBQ0E7O0FBQ0E7QUFDRSxhQUFPLEtBQVA7QUF6Qko7QUEyQkQsQ0FsQ1ksQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFjdGlvbiB9IGZyb20gJy4vYWN0aW9ucyc7XG5pbXBvcnQgeyBBY3Rpb25UeXBlcyB9IGZyb20gJy4vdHlwZXMnO1xuaW1wb3J0IHsgSVN1cGVyUXVldWVQcm9wcyB9IGZyb20gJy4uLy4uL1JlYWN0L3NjcmVlbnMvU3VwZXJ2aXNvclF1ZXVlU2NyZWVuJztcblxuZXhwb3J0IGNvbnN0IGluaXRpYWxTdGF0ZTogSVN1cGVyUXVldWVQcm9wcyA9IHtcbiAgdGVhbU1lbWJlcnM6IFtdLFxuICBlcnJvcjogJydcbn07XG5cbmV4cG9ydCBjb25zdCByZWR1Y2VyID0gKFxuICBzdGF0ZTogSVN1cGVyUXVldWVQcm9wcyA9IGluaXRpYWxTdGF0ZSxcbiAgYWN0aW9uOiBBY3Rpb25cbikgPT4ge1xuICBjb25zdCB7IHRlYW1NZW1iZXJzIH0gPSBzdGF0ZTtcbiAgY29uc3QgU0VMRUNUID0gQWN0aW9uVHlwZXMuU0VMRUNUX1RFQU1fTUVNQkVSO1xuICBjb25zdCBVTlNFTEVDVCA9IEFjdGlvblR5cGVzLlVOU0VMRUNUX1RFQU1fTUVNQkVSO1xuICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgY2FzZSBTRUxFQ1QgfHwgVU5TRUxFQ1Q6XG4gICAgICBjb25zdCBtZW1iZXJJZCA9IGFjdGlvbi5wYXlsb2FkLm1lbWJlcklkO1xuICAgICAgLy8gY2hlY2sgaWYgbWVtYmVyIGlzIGFscmVhZHkgaW4gdGhlIHRlYW1cbiAgICAgIGNvbnN0IG1lbWJlcklkUHJlc2VudCA9IHRlYW1NZW1iZXJzLnNvbWUoXG4gICAgICAgIG1lbWJlciA9PiBtZW1iZXIuaWQgPT09IG1lbWJlcklkXG4gICAgICApO1xuICAgICAgLy8gYWRkIG1lbWJlciBpZiBub3QgYWxyZWFkeSB0aGVyZVxuICAgICAgaWYgKCFtZW1iZXJJZFByZXNlbnQgJiYgU0VMRUNUKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgICAgdGVhbU1lbWJlcnM6IFsuLi5zdGF0ZS50ZWFtTWVtYmVycywgeyBpZDogYWN0aW9uLnBheWxvYWQubWVtYmVySWQgfV1cbiAgICAgICAgfTtcbiAgICAgICAgLy8gcmVtb3ZlIG1lbWJlciBpZiBhbHJlYWR5IHRoZXJlXG4gICAgICB9IGVsc2UgaWYgKG1lbWJlcklkUHJlc2VudCAmJiBVTlNFTEVDVCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgIHRlYW1NZW1iZXJzOiB0ZWFtTWVtYmVycy5maWx0ZXIobWVtYmVyID0+IG1lbWJlci5pZCAhPT0gbWVtYmVySWQpXG4gICAgICAgIH07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4geyAuLi5zdGF0ZSwgZXJyb3I6ICdvb3BzJyB9O1xuICAgICAgfVxuICAgIC8vIGNhc2UgQWN0aW9uVHlwZXMuQVNTSUdOX1RFQU06XG4gICAgLy8gICByZXR1cm4gc3RhdGUudGVhbU1lbWJlcnM7XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBzdGF0ZTtcbiAgfVxufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=