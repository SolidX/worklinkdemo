{"version":3,"sources":["TeamMember.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport Draggable from '../../../utils/react-native-drag-drop/Draggable';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\n\nexport default class TeamMember extends Component<any, any> {\n  state = {\n    iconName: 'account-circle',\n    iconColor: '#5eb8ec'\n  };\n  // change icon when teaMember selected or unselected\n  changeIcon = (id: string) => {\n    const memberIdPresent = this.props.teamArray.some(\n      member => member.id === id\n    );\n    memberIdPresent\n      ? this.setState({\n          iconName: 'check-circle',\n          iconColor: '#c6cacc'\n        })\n      : this.setState({\n          iconName: 'account-circle',\n          iconColor: '#5eb8ec'\n        });\n  };\n  render() {\n    const {\n      item,\n      selectTeamMember,\n      teamArray,\n      addCurrentId,\n      currentId\n    } = this.props;\n    return (\n      <Draggable\n        style={[styles.teamMember]}\n        itemId={item.id}\n        draggableSelectTeamMember={selectTeamMember}\n        draggableChangeIcon={this.changeIcon}\n        teamArray={teamArray}\n        addCurrentId={addCurrentId}\n      >\n        <View style={styles.user}>\n          <TouchableOpacity\n            onPress={() => {\n              selectTeamMember(item.id);\n              // use setState callback to make component run changeIcon synchronously\n              this.setState({}, () => {\n                this.changeIcon(item.id);\n              });\n            }}\n          >\n            <Icon\n              name={`${this.state.iconName}`}\n              size={30}\n              color={`${this.state.iconColor}`}\n            />\n          </TouchableOpacity>\n          <Text style={styles.name}>{item.client.name}</Text>\n        </View>\n        <Text style={styles.countText}>5</Text>\n      </Draggable>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  teamMember: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderStyle: 'solid',\n    borderColor: '#c6cacc',\n    paddingTop: '2%',\n    paddingBottom: '10%'\n  },\n  user: {\n    flex: 4,\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: '5%'\n  },\n  name: {\n    marginLeft: '3%'\n  },\n  countText: {\n    flex: 0.5\n  }\n});\n"],"sourceRoot":""}