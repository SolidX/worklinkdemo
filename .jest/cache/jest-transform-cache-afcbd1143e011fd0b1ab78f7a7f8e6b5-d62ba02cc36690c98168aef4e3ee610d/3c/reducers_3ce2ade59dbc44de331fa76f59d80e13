3c90fecc3d4dac74a0f1514ea9745af5
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

const types_1 = require("./types");

exports.initialState = [{
  teamMembers: [],
  error: ''
}];

exports.reducer = (state = exports.initialState, action) => {
  const {
    teamMembers
  } = state;
  const SELECT = types_1.ActionTypes.SELECT_TEAM_MEMBER;
  const UNSELECT = types_1.ActionTypes.UNSELECT_TEAM_MEMBER;

  switch (action.type) {
    case SELECT || UNSELECT:
      const memberId = action.payload.memberId; // check if member is already in the team

      const memberIdPresent = teamMembers.some(member => member.id === memberId); // add member if not already there

      if (!memberIdPresent && SELECT) {
        return Object.assign({}, state, {
          teamMembers: [...state.teamMembers, {
            id: action.payload.memberId
          }]
        }); // remove member if already there
      } else if (memberIdPresent && UNSELECT) {
        return Object.assign({}, state, {
          teamMembers: teamMembers.filter(member => member.id !== memberId)
        });
      } else {
        return Object.assign({}, state, {
          error: 'oops'
        });
      }

    default:
      return state;
  }
}; //# sourceMappingURL=reducers.js.map
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZHVjZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUNBLE1BQUEsT0FBQSxHQUFBLE9BQUEsQ0FBQSxTQUFBLENBQUE7O0FBR2EsT0FBQSxDQUFBLFlBQUEsR0FBaUMsQ0FDNUM7QUFDRSxFQUFBLFdBQVcsRUFBRSxFQURmO0FBRUUsRUFBQSxLQUFLLEVBQUU7QUFGVCxDQUQ0QyxDQUFqQzs7QUFPQSxPQUFBLENBQUEsT0FBQSxHQUFVLENBQ3JCLEtBQUEsR0FBMEIsT0FBQSxDQUFBLFlBREwsRUFFckIsTUFGcUIsS0FHbkI7QUFDRixRQUFNO0FBQUUsSUFBQTtBQUFGLE1BQWtCLEtBQXhCO0FBQ0EsUUFBTSxNQUFNLEdBQUcsT0FBQSxDQUFBLFdBQUEsQ0FBWSxrQkFBM0I7QUFDQSxRQUFNLFFBQVEsR0FBRyxPQUFBLENBQUEsV0FBQSxDQUFZLG9CQUE3Qjs7QUFDQSxVQUFRLE1BQU0sQ0FBQyxJQUFmO0FBQ0UsU0FBSyxNQUFNLElBQUksUUFBZjtBQUNFLFlBQU0sUUFBUSxHQUFHLE1BQU0sQ0FBQyxPQUFQLENBQWUsUUFBaEMsQ0FERixDQUVFOztBQUNBLFlBQU0sZUFBZSxHQUFHLFdBQVcsQ0FBQyxJQUFaLENBQ3RCLE1BQU0sSUFBSSxNQUFNLENBQUMsRUFBUCxLQUFjLFFBREYsQ0FBeEIsQ0FIRixDQU1FOztBQUNBLFVBQUksQ0FBQyxlQUFELElBQW9CLE1BQXhCLEVBQWdDO0FBQzlCLGVBQUEsTUFBQSxDQUFBLE1BQUEsQ0FBQSxFQUFBLEVBQ0ssS0FETCxFQUNVO0FBQ1IsVUFBQSxXQUFXLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxXQUFWLEVBQXVCO0FBQUUsWUFBQSxFQUFFLEVBQUUsTUFBTSxDQUFDLE9BQVAsQ0FBZTtBQUFyQixXQUF2QjtBQURMLFNBRFYsQ0FBQSxDQUQ4QixDQUs5QjtBQUNELE9BTkQsTUFNTyxJQUFJLGVBQWUsSUFBSSxRQUF2QixFQUFpQztBQUN0QyxlQUFBLE1BQUEsQ0FBQSxNQUFBLENBQUEsRUFBQSxFQUNLLEtBREwsRUFDVTtBQUNSLFVBQUEsV0FBVyxFQUFFLFdBQVcsQ0FBQyxNQUFaLENBQW1CLE1BQU0sSUFBSSxNQUFNLENBQUMsRUFBUCxLQUFjLFFBQTNDO0FBREwsU0FEVixDQUFBO0FBSUQsT0FMTSxNQUtBO0FBQ0wsZUFBQSxNQUFBLENBQUEsTUFBQSxDQUFBLEVBQUEsRUFBWSxLQUFaLEVBQWlCO0FBQUUsVUFBQSxLQUFLLEVBQUU7QUFBVCxTQUFqQixDQUFBO0FBQ0Q7O0FBQ0g7QUFDRSxhQUFPLEtBQVA7QUF2Qko7QUF5QkQsQ0FoQ1ksQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFjdGlvbiB9IGZyb20gJy4vYWN0aW9ucyc7XG5pbXBvcnQgeyBBY3Rpb25UeXBlcyB9IGZyb20gJy4vdHlwZXMnO1xuaW1wb3J0IHsgSVN1cGVyUXVldWVQcm9wcyB9IGZyb20gJy4uLy4uL1JlYWN0L3NjcmVlbnMvU3VwZXJ2aXNvclF1ZXVlU2NyZWVuJztcblxuZXhwb3J0IGNvbnN0IGluaXRpYWxTdGF0ZTogSVN1cGVyUXVldWVQcm9wcyA9IFtcbiAge1xuICAgIHRlYW1NZW1iZXJzOiBbXSxcbiAgICBlcnJvcjogJydcbiAgfVxuXTtcblxuZXhwb3J0IGNvbnN0IHJlZHVjZXIgPSAoXG4gIHN0YXRlOiBJU3VwZXJRdWV1ZVByb3BzID0gaW5pdGlhbFN0YXRlLFxuICBhY3Rpb246IEFjdGlvblxuKSA9PiB7XG4gIGNvbnN0IHsgdGVhbU1lbWJlcnMgfSA9IHN0YXRlO1xuICBjb25zdCBTRUxFQ1QgPSBBY3Rpb25UeXBlcy5TRUxFQ1RfVEVBTV9NRU1CRVI7XG4gIGNvbnN0IFVOU0VMRUNUID0gQWN0aW9uVHlwZXMuVU5TRUxFQ1RfVEVBTV9NRU1CRVI7XG4gIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcbiAgICBjYXNlIFNFTEVDVCB8fCBVTlNFTEVDVDpcbiAgICAgIGNvbnN0IG1lbWJlcklkID0gYWN0aW9uLnBheWxvYWQubWVtYmVySWQ7XG4gICAgICAvLyBjaGVjayBpZiBtZW1iZXIgaXMgYWxyZWFkeSBpbiB0aGUgdGVhbVxuICAgICAgY29uc3QgbWVtYmVySWRQcmVzZW50ID0gdGVhbU1lbWJlcnMuc29tZShcbiAgICAgICAgbWVtYmVyID0+IG1lbWJlci5pZCA9PT0gbWVtYmVySWRcbiAgICAgICk7XG4gICAgICAvLyBhZGQgbWVtYmVyIGlmIG5vdCBhbHJlYWR5IHRoZXJlXG4gICAgICBpZiAoIW1lbWJlcklkUHJlc2VudCAmJiBTRUxFQ1QpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICB0ZWFtTWVtYmVyczogWy4uLnN0YXRlLnRlYW1NZW1iZXJzLCB7IGlkOiBhY3Rpb24ucGF5bG9hZC5tZW1iZXJJZCB9XVxuICAgICAgICB9O1xuICAgICAgICAvLyByZW1vdmUgbWVtYmVyIGlmIGFscmVhZHkgdGhlcmVcbiAgICAgIH0gZWxzZSBpZiAobWVtYmVySWRQcmVzZW50ICYmIFVOU0VMRUNUKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgICAgdGVhbU1lbWJlcnM6IHRlYW1NZW1iZXJzLmZpbHRlcihtZW1iZXIgPT4gbWVtYmVyLmlkICE9PSBtZW1iZXJJZClcbiAgICAgICAgfTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB7IC4uLnN0YXRlLCBlcnJvcjogJ29vcHMnIH07XG4gICAgICB9XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBzdGF0ZTtcbiAgfVxufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=