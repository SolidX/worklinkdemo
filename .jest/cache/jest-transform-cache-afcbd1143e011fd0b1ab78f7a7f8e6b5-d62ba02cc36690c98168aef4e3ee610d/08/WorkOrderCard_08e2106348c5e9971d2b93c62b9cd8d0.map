{"version":3,"sources":["WorkOrderCard.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,MAAA,OAAA,GAAA,YAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,MAAA,cAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,MAAA,UAAA,GAAA,eAAA,CAAA,OAAA,CAAA,gDAAA,CAAA,CAAA;;AAEA,MAAA,aAAA,SAA2C,OAAA,CAAA,SAA3C,CAA8D;AAA9D,EAAA,WAAA,GAAA;;AACE,SAAA,KAAA,GAAQ;AACN,MAAA,WAAW,EAAE;AADP,KAAR;AAuCD;;AApCC,EAAA,MAAM,GAAA;AACJ,UAAM,WAAW,GAAG;AAClB,MAAA,eAAe,EAAE,MADC;AAElB,MAAA,aAAa,EAAE,GAFG;AAGlB,MAAA,SAAS,EAAE,CAHO;AAIlB,MAAA,YAAY,EAAE;AAAE,QAAA,KAAK,EAAE,CAAC,CAAV;AAAa,QAAA,MAAM,EAAE;AAArB,OAJI;AAKlB,MAAA,YAAY,EAAE;AALI,KAApB;AAOA,WACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,UAAA,CAAA,OAAD,EAAS;AACP,MAAA,OAAO,EAAE,MACP,KAAK,QAAL,CAAc;AACZ,QAAA,WAAW,EAAE;AADD,OAAd,CAFK;AAMP,MAAA,OAAO,EAAE,MAAK;AACZ,aAAK,QAAL,CAAc;AACZ,UAAA,WAAW,EAAE;AADD,SAAd;AAGD,OAVM;AAWP,MAAA,MAAM,EAAE,MAAM,KAAK,KAAL,CAAW,aAAX,CAAyB,IAAzB,CAXP;AAYP,MAAA,KAAK,EAAE,MAAM,CAAC;AAZP,KAAT,EAcE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,cAAA,CAAA,IAAD,EAAK;AACH,MAAA,KAAK,EAAE,CACL,MAAM,CAAC,QADF,EAEL,WAFK,EAGL,KAAK,KAAL,CAAW,WAAX,IAA0B,MAAM,CAAC,MAH5B;AADJ,KAAL,EAOE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,cAAA,CAAA,IAAD,EAAK,IAAL,CAPF,EAQG,KAAK,KAAL,CAAW,QARd,CAdF,CADF;AA2BD;;AAvC2D;;AAA9D,OAAA,CAAA,OAAA,GAAA,aAAA;AA0CA,MAAM,MAAM,GAAG,cAAA,CAAA,UAAA,CAAW,MAAX,CAAkB;AAC/B,EAAA,QAAQ,EAAE;AACR,IAAA,aAAa,EAAE;AADP,GADqB;AAI/B,EAAA,QAAQ,EAAE;AACR,IAAA,IAAI,EAAE,CADE;AAER,IAAA,aAAa,EAAE,KAFP;AAGR,IAAA,UAAU,EAAE,QAHJ;AAIR,IAAA,OAAO,EAAE,IAJD;AAKR,IAAA,aAAa,EAAE,IALP;AAMR,IAAA,YAAY,EAAE;AANN,GAJqB;AAY/B,EAAA,MAAM,EAAE;AACN,IAAA,eAAe,EAAE;AADX;AAZuB,CAAlB,CAAf,C","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport DropZone from '../../../utils/react-native-drag-drop/DropZone';\n\nexport default class WorkOrderCard extends Component<any, any> {\n  state = {\n    zoneEntered: false\n  };\n  render() {\n    const shadowStyle = {\n      backgroundColor: '#fff',\n      shadowOpacity: 0.1,\n      elevation: 4,\n      shadowOffset: { width: -1, height: 3 },\n      shadowRadius: 5\n    };\n    return (\n      <DropZone\n        onEnter={() =>\n          this.setState({\n            zoneEntered: true\n          })\n        }\n        onLeave={() => {\n          this.setState({\n            zoneEntered: false\n          });\n        }}\n        onDrop={() => this.props.droppedInZone(true)}\n        style={styles.dropZone}\n      >\n        <View\n          style={[\n            styles.wordCard,\n            shadowStyle,\n            this.state.zoneEntered && styles.active\n          ]}\n        >\n          <View />\n          {this.props.children}\n        </View>\n      </DropZone>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  dropZone: {\n    paddingBottom: '3%'\n  },\n  wordCard: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: '3%',\n    paddingBottom: '8%',\n    borderRadius: 3\n  },\n  active: {\n    backgroundColor: '#FFD740'\n  }\n});\n"],"sourceRoot":""}