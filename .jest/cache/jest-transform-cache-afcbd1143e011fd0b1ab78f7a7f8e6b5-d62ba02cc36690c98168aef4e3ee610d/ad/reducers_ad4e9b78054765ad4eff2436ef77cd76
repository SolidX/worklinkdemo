f62d0422c717163a5877f136f33a4837
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
}); // import { Action } from './actions';
// import { ActionTypes } from './types';
// import { ISuperQueueProps } from '../../React/screens/SupervisorQueueScreen';

const reducers_1 = require("../../drag-and-drop/reducers");

const actions_1 = require("../../drag-and-drop/actions");

const mockData_1 = require("../../../config/jest/mockData"); // export const initialState: ISuperQueueProps = {
//   teamMembers: [],
//   error: ''
// };
// export const reducer = (
//   state: ISuperQueueProps = initialState,
//   action: Action
// ) => {
//   const { teamMembers } = state;
//   const SELECT = ActionTypes.SELECT_TEAM_MEMBER;
//   const UNSELECT = ActionTypes.UNSELECT_TEAM_MEMBER;
//   switch (action.type) {
//     case SELECT || UNSELECT:
//       const memberId = action.payload.memberId;
//       // check if member is already in the team
//       const memberIdPresent = teamMembers.some(
//         member => member.id === memberId
//       );
//       // add member if not already there
//       if (!memberIdPresent && SELECT) {
//         return {
//           ...state,
//           teamMembers: [...state.teamMembers, { id: action.payload.memberId }]
//         };
//         // remove member if already there
//       } else if (memberIdPresent && UNSELECT) {
//         return {
//           ...state,
//           teamMembers: teamMembers.filter(member => member.id !== memberId)
//         };
//       } else {
//         return { ...state, error: 'oops' };
//       }
//     default:
//       return state;
//   }
// };


expect(reducers_1.reducer(reducers_1.initialState, actions_1.selectTeamMember(mockData_1.memberId))).toMatchSnapshot(); //# sourceMappingURL=reducers.js.map
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZHVjZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7SUFBQTtBQUNBO0FBQ0E7O0FBQ0EsTUFBQSxVQUFBLEdBQUEsT0FBQSxDQUFBLDhCQUFBLENBQUE7O0FBQ0EsTUFBQSxTQUFBLEdBQUEsT0FBQSxDQUFBLDZCQUFBLENBQUE7O0FBSUEsTUFBQSxVQUFBLEdBQUEsT0FBQSxDQUFBLCtCQUFBLENBQUEsQyxDQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFFQSxNQUFNLENBQUMsVUFBQSxDQUFBLE9BQUEsQ0FBUSxVQUFBLENBQUEsWUFBUixFQUFzQixTQUFBLENBQUEsZ0JBQUEsQ0FBaUIsVUFBQSxDQUFBLFFBQWpCLENBQXRCLENBQUQsQ0FBTixDQUEwRCxlQUExRCxHIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IHsgQWN0aW9uIH0gZnJvbSAnLi9hY3Rpb25zJztcbi8vIGltcG9ydCB7IEFjdGlvblR5cGVzIH0gZnJvbSAnLi90eXBlcyc7XG4vLyBpbXBvcnQgeyBJU3VwZXJRdWV1ZVByb3BzIH0gZnJvbSAnLi4vLi4vUmVhY3Qvc2NyZWVucy9TdXBlcnZpc29yUXVldWVTY3JlZW4nO1xuaW1wb3J0IHsgaW5pdGlhbFN0YXRlLCByZWR1Y2VyIH0gZnJvbSAnLi4vLi4vZHJhZy1hbmQtZHJvcC9yZWR1Y2Vycyc7XG5pbXBvcnQge1xuICBzZWxlY3RUZWFtTWVtYmVyLFxuICB1blNlbGVjdFRlYW1NZW1iZXJcbn0gZnJvbSAnLi4vLi4vZHJhZy1hbmQtZHJvcC9hY3Rpb25zJztcbmltcG9ydCB7IHRlYW1NZW1iZXJzLCBtZW1iZXJJZCB9IGZyb20gJy4uLy4uLy4uL2NvbmZpZy9qZXN0L21vY2tEYXRhJztcblxuLy8gZXhwb3J0IGNvbnN0IGluaXRpYWxTdGF0ZTogSVN1cGVyUXVldWVQcm9wcyA9IHtcbi8vICAgdGVhbU1lbWJlcnM6IFtdLFxuLy8gICBlcnJvcjogJydcbi8vIH07XG5cbi8vIGV4cG9ydCBjb25zdCByZWR1Y2VyID0gKFxuLy8gICBzdGF0ZTogSVN1cGVyUXVldWVQcm9wcyA9IGluaXRpYWxTdGF0ZSxcbi8vICAgYWN0aW9uOiBBY3Rpb25cbi8vICkgPT4ge1xuLy8gICBjb25zdCB7IHRlYW1NZW1iZXJzIH0gPSBzdGF0ZTtcbi8vICAgY29uc3QgU0VMRUNUID0gQWN0aW9uVHlwZXMuU0VMRUNUX1RFQU1fTUVNQkVSO1xuLy8gICBjb25zdCBVTlNFTEVDVCA9IEFjdGlvblR5cGVzLlVOU0VMRUNUX1RFQU1fTUVNQkVSO1xuLy8gICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4vLyAgICAgY2FzZSBTRUxFQ1QgfHwgVU5TRUxFQ1Q6XG4vLyAgICAgICBjb25zdCBtZW1iZXJJZCA9IGFjdGlvbi5wYXlsb2FkLm1lbWJlcklkO1xuLy8gICAgICAgLy8gY2hlY2sgaWYgbWVtYmVyIGlzIGFscmVhZHkgaW4gdGhlIHRlYW1cbi8vICAgICAgIGNvbnN0IG1lbWJlcklkUHJlc2VudCA9IHRlYW1NZW1iZXJzLnNvbWUoXG4vLyAgICAgICAgIG1lbWJlciA9PiBtZW1iZXIuaWQgPT09IG1lbWJlcklkXG4vLyAgICAgICApO1xuLy8gICAgICAgLy8gYWRkIG1lbWJlciBpZiBub3QgYWxyZWFkeSB0aGVyZVxuLy8gICAgICAgaWYgKCFtZW1iZXJJZFByZXNlbnQgJiYgU0VMRUNUKSB7XG4vLyAgICAgICAgIHJldHVybiB7XG4vLyAgICAgICAgICAgLi4uc3RhdGUsXG4vLyAgICAgICAgICAgdGVhbU1lbWJlcnM6IFsuLi5zdGF0ZS50ZWFtTWVtYmVycywgeyBpZDogYWN0aW9uLnBheWxvYWQubWVtYmVySWQgfV1cbi8vICAgICAgICAgfTtcbi8vICAgICAgICAgLy8gcmVtb3ZlIG1lbWJlciBpZiBhbHJlYWR5IHRoZXJlXG4vLyAgICAgICB9IGVsc2UgaWYgKG1lbWJlcklkUHJlc2VudCAmJiBVTlNFTEVDVCkge1xuLy8gICAgICAgICByZXR1cm4ge1xuLy8gICAgICAgICAgIC4uLnN0YXRlLFxuLy8gICAgICAgICAgIHRlYW1NZW1iZXJzOiB0ZWFtTWVtYmVycy5maWx0ZXIobWVtYmVyID0+IG1lbWJlci5pZCAhPT0gbWVtYmVySWQpXG4vLyAgICAgICAgIH07XG4vLyAgICAgICB9IGVsc2Uge1xuLy8gICAgICAgICByZXR1cm4geyAuLi5zdGF0ZSwgZXJyb3I6ICdvb3BzJyB9O1xuLy8gICAgICAgfVxuLy8gICAgIGRlZmF1bHQ6XG4vLyAgICAgICByZXR1cm4gc3RhdGU7XG4vLyAgIH1cbi8vIH07XG5cbmV4cGVjdChyZWR1Y2VyKGluaXRpYWxTdGF0ZSwgc2VsZWN0VGVhbU1lbWJlcihtZW1iZXJJZCkpKS50b01hdGNoU25hcHNob3QoKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=