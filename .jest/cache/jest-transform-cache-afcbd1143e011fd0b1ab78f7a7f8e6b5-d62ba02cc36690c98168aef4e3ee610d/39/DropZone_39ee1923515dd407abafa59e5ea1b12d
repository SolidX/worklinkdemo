33c4315ce607458c18836669ba010f8c
"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _react = babelHelpers.interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _propTypes = babelHelpers.interopRequireDefault(require("prop-types"));var _jsxFileName = "/Users/ao60/Desktop/WorkFiles/WorklinkDemo/src/React/utils/react-native-drag-drop/DropZone.jsx";var
















DropZone = function (_Component) {



  function DropZone(props) {var _this;babelHelpers.classCallCheck(this, DropZone);
    _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(DropZone).call(this, props));
    _this.displayName = 'DropZone';
    _this._timer = _this.state = {};
    _this.reportMeasurements = _this.reportMeasurements.bind(babelHelpers.assertThisInitialized(babelHelpers.assertThisInitialized(_this)));
    _this.onEnter = _this.onEnter.bind(babelHelpers.assertThisInitialized(babelHelpers.assertThisInitialized(_this)));
    _this.onLeave = _this.onLeave.bind(babelHelpers.assertThisInitialized(babelHelpers.assertThisInitialized(_this)));
    _this.onDrop = _this.onDrop.bind(babelHelpers.assertThisInitialized(babelHelpers.assertThisInitialized(_this)));return _this;
  }babelHelpers.createClass(DropZone, [{ key: "reportMeasurements", value: function reportMeasurements()

    {var _this2 = this;
      if (this.props.dragging)
      this.context.dragContext.removeZone(this.refs.wrapper);
      this.wrapper.measure(function (_, __, width, height, x, y) {
        if (!_this2.props.dragging)
        _this2.context.dragContext.updateZone({
          width: width,
          height: height,
          x: x,
          y: y,
          ref: _this2.refs.wrapper,
          onEnter: _this2.onEnter,
          onLeave: _this2.onLeave,
          onDrop: _this2.onDrop });

      });
    } }, { key: "componentDidMount", value: function componentDidMount()







    {
      this.reportMeasurements();
      this._timer = setInterval(this.reportMeasurements, 1000);
    } }, { key: "componentWillUnmount", value: function componentWillUnmount()

    {
      this.context.dragContext.removeZone(this.refs.wrapper);
      clearInterval(this._timer);
    } }, { key: "componentDidUpdate", value: function componentDidUpdate()
    {
      this.reportMeasurements();
    } }, { key: "onEnter", value: function onEnter(_ref)

    {var x = _ref.x,y = _ref.y;
      if (this.props.disabled) return;
      if (!this.state.active) {
        if (this.props.onEnter) this.props.onEnter();
        this.setState({
          active: true });

      }
    } }, { key: "onLeave", value: function onLeave()

    {
      if (this.props.disabled) return;
      if (this.state.active) {
        if (this.props.onLeave) this.props.onLeave();
        this.setState({
          active: false });

      }
    } }, { key: "onDrop", value: function onDrop(

    data) {
      if (this.props.disabled) return;
      if (this.props.onDrop) this.props.onDrop(data);
      this.setState({
        active: false });

    } }, { key: "render", value: function render()





    {var _this3 = this;
      return (
        _react.default.createElement(_reactNative.View, {
          style: this.props.style,
          pointerEvents: this.props.pointerEvents,
          onLayout: this.reportMeasurements,
          ref: 'wrapper', __source: { fileName: _jsxFileName, lineNumber: 105 } },

        _react.default.Children.map(this.props.children, function (child) {
          if (_react.default.isValidElement(child)) {
            return _react.default.cloneElement(
            child,
            babelHelpers.extends({}, _this3.props, { dragOver: _this3.state.active }));

          }
        })));


    } }]);babelHelpers.inherits(DropZone, _Component);return DropZone;}(_react.Component);exports.default = DropZone;DropZone.propTypes = { onEnter: _propTypes.default.func, onLeave: _propTypes.default.func, onDrop: _propTypes.default.func };DropZone.contextTypes = { dragContext: _propTypes.default.any };