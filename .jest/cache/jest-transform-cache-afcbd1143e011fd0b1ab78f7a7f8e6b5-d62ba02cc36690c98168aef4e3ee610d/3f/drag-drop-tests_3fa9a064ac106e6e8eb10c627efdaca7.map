{"version":3,"sources":["drag-drop-tests.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,MAAA,UAAA,GAAA,OAAA,CAAA,2BAAA,CAAA;;AACA,MAAA,OAAA,GAAA,YAAA,CAAA,OAAA,CAAA,0BAAA,CAAA,CAAA;;AACA,MAAA,OAAA,GAAA,OAAA,CAAA,wBAAA,CAAA,C,CAEA;;;AAEA,QAAQ,CAAC,mBAAD,EAAsB,MAAK;AACjC,EAAA,EAAE,CAAC,oDAAD,EAAuD,MAAK;AAC5D,UAAM,QAAQ,GAAG,UAAjB;AACA,UAAM,cAAc,GAAG;AACrB,MAAA,IAAI,EAAE,OAAA,CAAA,WAAA,CAAY,kBADG;AAErB,MAAA,OAAO,EAAE;AAAE,QAAA;AAAF;AAFY,KAAvB;AAIA,IAAA,MAAM,CAAC,OAAO,CAAC,gBAAR,CAAyB,QAAzB,CAAD,CAAN,CAA2C,OAA3C,CAAmD,cAAnD,EAN4D,CAO5D;AACD,GARC,CAAF;AASA,EAAA,EAAE,CAAC,oDAAD,EAAuD,MAAK;AAC5D,UAAM,QAAQ,GAAG,UAAjB;AACA,UAAM,cAAc,GAAG;AACrB,MAAA,IAAI,EAAE,OAAA,CAAA,WAAA,CAAY,oBADG;AAErB,MAAA,OAAO,EAAE;AAAE,QAAA;AAAF;AAFY,KAAvB;AAIA,IAAA,MAAM,CAAC,OAAO,CAAC,kBAAR,CAA2B,QAA3B,CAAD,CAAN,CAA6C,OAA7C,CAAqD,cAArD;AACD,GAPC,CAAF;AAQD,CAlBO,CAAR;AAoBA,QAAQ,CAAC,oBAAD,EAAuB,MAAK;AAClC,EAAA,EAAE,CAAC,iCAAD,EAAoC,MAAK;AACzC,IAAA,MAAM,CAAC,UAAA,CAAA,OAAA,CAAQ,SAAR,EAAmB,EAAnB,CAAD,CAAN,CAA+B,OAA/B,CAAuC;AACrC,MAAA,WAAW,EAAE,EADwB;AAErC,MAAA,KAAK,EAAE;AAF8B,KAAvC;AAID,GALC,CAAF;AAMA,EAAA,EAAE,CAAC,kCAAD,EAAqC,MAAK;AAC1C,IAAA,MAAM,CACJ,UAAA,CAAA,OAAA,CACE,EADF,EAEE;AACE,MAAA,IAAI,EAAE,OAAA,CAAA,WAAA,CAAY,kBADpB;AAEE,MAAA,OAAO,EAAE;AACP,QAAA,QAAQ,EAAE;AADH;AAFX,KAFF,CADI,CAAN,CAUE,OAVF,CAUU;AACR,MAAA,WAAW,EAAE,CAAC,SAAD;AADL,KAVV;AAaD,GAdC,CAAF;AAeD,CAtBO,CAAR,C","sourcesContent":["import React from 'react';\nimport { initialState, reducer } from '../drag-and-drop/reducers';\nimport * as actions from '../drag-and-drop/actions';\nimport { ActionTypes } from '../drag-and-drop/types';\n\n// import { teamMembers, memberId } from '../../config/jest/mockData';\n\ndescribe('drag-drop actions', () => {\n  it('should create an action to select a team member id', () => {\n    const memberId = '18000003';\n    const expectedAction = {\n      type: ActionTypes.SELECT_TEAM_MEMBER,\n      payload: { memberId }\n    };\n    expect(actions.selectTeamMember(memberId)).toEqual(expectedAction);\n    // expect(reducer(initialState, selectTeamMember(memberId))).toMatchSnapshot();\n  });\n  it('should create an action to remove a team member id', () => {\n    const memberId = '18000003';\n    const expectedAction = {\n      type: ActionTypes.UNSELECT_TEAM_MEMBER,\n      payload: { memberId }\n    };\n    expect(actions.unSelectTeamMember(memberId)).toEqual(expectedAction);\n  });\n});\n\ndescribe('drag-drop reducers', () => {\n  it('should return the initial state', () => {\n    expect(reducer(undefined, {})).toEqual({\n      teamMembers: [],\n      error: ''\n    });\n  });\n  it('should handle SELECT_TEAM_MEMBER', () => {\n    expect(\n      reducer(\n        {},\n        {\n          type: ActionTypes.SELECT_TEAM_MEMBER,\n          payload: {\n            memberId: '1800004'\n          }\n        }\n      )\n    ).toEqual({\n      teamMembers: ['1800004']\n    });\n  });\n});\n"],"sourceRoot":""}