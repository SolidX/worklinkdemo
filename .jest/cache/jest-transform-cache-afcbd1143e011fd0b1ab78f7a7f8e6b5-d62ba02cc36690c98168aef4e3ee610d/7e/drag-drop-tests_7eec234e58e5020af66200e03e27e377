3084ebf017ae267faeed06e3711b2e8a
"use strict";

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
  result["default"] = mod;
  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

const actions = __importStar(require("../drag-and-drop/actions"));

const types_1 = require("../drag-and-drop/types"); // import { teamMembers, memberId } from '../../config/jest/mockData';
// export const initialState: ISuperQueueProps = {
//   teamMembers: [],
//   error: ''
// };
// export const reducer = (
//   state: ISuperQueueProps = initialState,
//   action: Action
// ) => {
//   const { teamMembers } = state;
//   const SELECT = ActionTypes.SELECT_TEAM_MEMBER;
//   const UNSELECT = ActionTypes.UNSELECT_TEAM_MEMBER;
//   switch (action.type) {
//     case SELECT || UNSELECT:
//       const memberId = action.payload.memberId;
//       // check if member is already in the team
//       const memberIdPresent = teamMembers.some(
//         member => member.id === memberId
//       );
//       // add member if not already there
//       if (!memberIdPresent && SELECT) {
//         return {
//           ...state,
//           teamMembers: [...state.teamMembers, { id: action.payload.memberId }]
//         };
//         // remove member if already there
//       } else if (memberIdPresent && UNSELECT) {
//         return {
//           ...state,
//           teamMembers: teamMembers.filter(member => member.id !== memberId)
//         };
//       } else {
//         return { ...state, error: 'oops' };
//       }
//     default:
//       return state;
//   }
// };


describe('actions', () => {
  it('should create an action to select a team member id', () => {
    const memberId = '18000003';
    const expectedAction = {
      type: types_1.ActionTypes.SELECT_TEAM_MEMBER,
      payload: {
        memberId
      }
    };
    expect(actions.selectTeamMember(memberId)).toEqual(expectedAction); // expect(reducer(initialState, selectTeamMember(memberId))).toMatchSnapshot();
  });
  it('should create an action to remove a team member id', () => {
    const memberId = '18000003';
    const expectedAction = {
      type: types_1.ActionTypes.UNSELECT_TEAM_MEMBER,
      payload: {
        memberId
      }
    };
    expect(actions.unSelectTeamMember(memberId)).toEqual(expectedAction);
  });
}); //# sourceMappingURL=drag-drop-tests.js.map
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRyYWctZHJvcC10ZXN0cy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFFQSxNQUFBLE9BQUEsR0FBQSxZQUFBLENBQUEsT0FBQSxDQUFBLDBCQUFBLENBQUEsQ0FBQTs7QUFDQSxNQUFBLE9BQUEsR0FBQSxPQUFBLENBQUEsd0JBQUEsQ0FBQSxDLENBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EsUUFBUSxDQUFDLFNBQUQsRUFBWSxNQUFLO0FBQ3ZCLEVBQUEsRUFBRSxDQUFDLG9EQUFELEVBQXVELE1BQUs7QUFDNUQsVUFBTSxRQUFRLEdBQUcsVUFBakI7QUFDQSxVQUFNLGNBQWMsR0FBRztBQUNyQixNQUFBLElBQUksRUFBRSxPQUFBLENBQUEsV0FBQSxDQUFZLGtCQURHO0FBRXJCLE1BQUEsT0FBTyxFQUFFO0FBQUUsUUFBQTtBQUFGO0FBRlksS0FBdkI7QUFJQSxJQUFBLE1BQU0sQ0FBQyxPQUFPLENBQUMsZ0JBQVIsQ0FBeUIsUUFBekIsQ0FBRCxDQUFOLENBQTJDLE9BQTNDLENBQW1ELGNBQW5ELEVBTjRELENBTzVEO0FBQ0QsR0FSQyxDQUFGO0FBU0EsRUFBQSxFQUFFLENBQUMsb0RBQUQsRUFBdUQsTUFBSztBQUM1RCxVQUFNLFFBQVEsR0FBRyxVQUFqQjtBQUNBLFVBQU0sY0FBYyxHQUFHO0FBQ3JCLE1BQUEsSUFBSSxFQUFFLE9BQUEsQ0FBQSxXQUFBLENBQVksb0JBREc7QUFFckIsTUFBQSxPQUFPLEVBQUU7QUFBRSxRQUFBO0FBQUY7QUFGWSxLQUF2QjtBQUlBLElBQUEsTUFBTSxDQUFDLE9BQU8sQ0FBQyxrQkFBUixDQUEyQixRQUEzQixDQUFELENBQU4sQ0FBNkMsT0FBN0MsQ0FBcUQsY0FBckQ7QUFDRCxHQVBDLENBQUY7QUFRRCxDQWxCTyxDQUFSLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgaW5pdGlhbFN0YXRlLCByZWR1Y2VyIH0gZnJvbSAnLi4vZHJhZy1hbmQtZHJvcC9yZWR1Y2Vycyc7XG5pbXBvcnQgKiBhcyBhY3Rpb25zIGZyb20gJy4uL2RyYWctYW5kLWRyb3AvYWN0aW9ucyc7XG5pbXBvcnQgeyBBY3Rpb25UeXBlcyB9IGZyb20gJy4uL2RyYWctYW5kLWRyb3AvdHlwZXMnO1xuXG4vLyBpbXBvcnQgeyB0ZWFtTWVtYmVycywgbWVtYmVySWQgfSBmcm9tICcuLi8uLi9jb25maWcvamVzdC9tb2NrRGF0YSc7XG5cbi8vIGV4cG9ydCBjb25zdCBpbml0aWFsU3RhdGU6IElTdXBlclF1ZXVlUHJvcHMgPSB7XG4vLyAgIHRlYW1NZW1iZXJzOiBbXSxcbi8vICAgZXJyb3I6ICcnXG4vLyB9O1xuXG4vLyBleHBvcnQgY29uc3QgcmVkdWNlciA9IChcbi8vICAgc3RhdGU6IElTdXBlclF1ZXVlUHJvcHMgPSBpbml0aWFsU3RhdGUsXG4vLyAgIGFjdGlvbjogQWN0aW9uXG4vLyApID0+IHtcbi8vICAgY29uc3QgeyB0ZWFtTWVtYmVycyB9ID0gc3RhdGU7XG4vLyAgIGNvbnN0IFNFTEVDVCA9IEFjdGlvblR5cGVzLlNFTEVDVF9URUFNX01FTUJFUjtcbi8vICAgY29uc3QgVU5TRUxFQ1QgPSBBY3Rpb25UeXBlcy5VTlNFTEVDVF9URUFNX01FTUJFUjtcbi8vICAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuLy8gICAgIGNhc2UgU0VMRUNUIHx8IFVOU0VMRUNUOlxuLy8gICAgICAgY29uc3QgbWVtYmVySWQgPSBhY3Rpb24ucGF5bG9hZC5tZW1iZXJJZDtcbi8vICAgICAgIC8vIGNoZWNrIGlmIG1lbWJlciBpcyBhbHJlYWR5IGluIHRoZSB0ZWFtXG4vLyAgICAgICBjb25zdCBtZW1iZXJJZFByZXNlbnQgPSB0ZWFtTWVtYmVycy5zb21lKFxuLy8gICAgICAgICBtZW1iZXIgPT4gbWVtYmVyLmlkID09PSBtZW1iZXJJZFxuLy8gICAgICAgKTtcbi8vICAgICAgIC8vIGFkZCBtZW1iZXIgaWYgbm90IGFscmVhZHkgdGhlcmVcbi8vICAgICAgIGlmICghbWVtYmVySWRQcmVzZW50ICYmIFNFTEVDVCkge1xuLy8gICAgICAgICByZXR1cm4ge1xuLy8gICAgICAgICAgIC4uLnN0YXRlLFxuLy8gICAgICAgICAgIHRlYW1NZW1iZXJzOiBbLi4uc3RhdGUudGVhbU1lbWJlcnMsIHsgaWQ6IGFjdGlvbi5wYXlsb2FkLm1lbWJlcklkIH1dXG4vLyAgICAgICAgIH07XG4vLyAgICAgICAgIC8vIHJlbW92ZSBtZW1iZXIgaWYgYWxyZWFkeSB0aGVyZVxuLy8gICAgICAgfSBlbHNlIGlmIChtZW1iZXJJZFByZXNlbnQgJiYgVU5TRUxFQ1QpIHtcbi8vICAgICAgICAgcmV0dXJuIHtcbi8vICAgICAgICAgICAuLi5zdGF0ZSxcbi8vICAgICAgICAgICB0ZWFtTWVtYmVyczogdGVhbU1lbWJlcnMuZmlsdGVyKG1lbWJlciA9PiBtZW1iZXIuaWQgIT09IG1lbWJlcklkKVxuLy8gICAgICAgICB9O1xuLy8gICAgICAgfSBlbHNlIHtcbi8vICAgICAgICAgcmV0dXJuIHsgLi4uc3RhdGUsIGVycm9yOiAnb29wcycgfTtcbi8vICAgICAgIH1cbi8vICAgICBkZWZhdWx0OlxuLy8gICAgICAgcmV0dXJuIHN0YXRlO1xuLy8gICB9XG4vLyB9O1xuZGVzY3JpYmUoJ2FjdGlvbnMnLCAoKSA9PiB7XG4gIGl0KCdzaG91bGQgY3JlYXRlIGFuIGFjdGlvbiB0byBzZWxlY3QgYSB0ZWFtIG1lbWJlciBpZCcsICgpID0+IHtcbiAgICBjb25zdCBtZW1iZXJJZCA9ICcxODAwMDAwMyc7XG4gICAgY29uc3QgZXhwZWN0ZWRBY3Rpb24gPSB7XG4gICAgICB0eXBlOiBBY3Rpb25UeXBlcy5TRUxFQ1RfVEVBTV9NRU1CRVIsXG4gICAgICBwYXlsb2FkOiB7IG1lbWJlcklkIH1cbiAgICB9O1xuICAgIGV4cGVjdChhY3Rpb25zLnNlbGVjdFRlYW1NZW1iZXIobWVtYmVySWQpKS50b0VxdWFsKGV4cGVjdGVkQWN0aW9uKTtcbiAgICAvLyBleHBlY3QocmVkdWNlcihpbml0aWFsU3RhdGUsIHNlbGVjdFRlYW1NZW1iZXIobWVtYmVySWQpKSkudG9NYXRjaFNuYXBzaG90KCk7XG4gIH0pO1xuICBpdCgnc2hvdWxkIGNyZWF0ZSBhbiBhY3Rpb24gdG8gcmVtb3ZlIGEgdGVhbSBtZW1iZXIgaWQnLCAoKSA9PiB7XG4gICAgY29uc3QgbWVtYmVySWQgPSAnMTgwMDAwMDMnO1xuICAgIGNvbnN0IGV4cGVjdGVkQWN0aW9uID0ge1xuICAgICAgdHlwZTogQWN0aW9uVHlwZXMuVU5TRUxFQ1RfVEVBTV9NRU1CRVIsXG4gICAgICBwYXlsb2FkOiB7IG1lbWJlcklkIH1cbiAgICB9O1xuICAgIGV4cGVjdChhY3Rpb25zLnVuU2VsZWN0VGVhbU1lbWJlcihtZW1iZXJJZCkpLnRvRXF1YWwoZXhwZWN0ZWRBY3Rpb24pO1xuICB9KTtcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==