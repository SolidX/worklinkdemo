{"file":"/Users/ao60/Desktop/WorkFiles/WorklinkDemo/src/React/utils/react-native-drag-drop/DropZone.tsx","mappings":"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","names":[],"sources":["/Users/ao60/Desktop/WorkFiles/WorklinkDemo/src/React/utils/react-native-drag-drop/DropZone.tsx"],"sourcesContent":["import React from 'react';\nimport { View, TouchableOpacity } from 'react-native';\nimport PropTypes from 'prop-types';\n\nclass DropZone extends React.Component {\n  constructor(props) {\n    super(props);\n    this.displayName = 'DropZone';\n    this.state = {};\n    this.reportMeasurements = this.reportMeasurements.bind(this);\n    this.onEnter = this.onEnter.bind(this);\n    this.onLeave = this.onLeave.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  reportMeasurements() {\n    if (this.props.dragging)\n      this.context.dragContext.removeZone(this.refs.wrapper);\n    this.refs.wrapper.measure((_, __, width, height, x, y) => {\n      if (!this.props.dragging)\n        this.context.dragContext.updateZone({\n          width,\n          height,\n          x,\n          y,\n          ref: this.refs.wrapper,\n          onEnter: this.onEnter,\n          onLeave: this.onLeave,\n          onDrop: this.onDrop\n        });\n    });\n  }\n\n  static propTypes = {\n    onEnter: PropTypes.func,\n    onLeave: PropTypes.func,\n    onDrop: PropTypes.func\n  };\n\n  componentDidMount() {\n    this.reportMeasurements();\n    this._timer = setInterval(this.reportMeasurements, 1000);\n  }\n\n  componentWillUnmount() {\n    this.context.dragContext.removeZone(this.refs.wrapper);\n    clearInterval(this._timer);\n  }\n  componentDidUpdate() {\n    this.reportMeasurements();\n  }\n\n  onEnter({ x, y }) {\n    if (this.props.disabled) return;\n    if (!this.state.active) {\n      if (this.props.onEnter) this.props.onEnter();\n      this.setState({\n        active: true\n      });\n    }\n  }\n\n  onLeave() {\n    if (this.props.disabled) return;\n    if (this.state.active) {\n      if (this.props.onLeave) this.props.onLeave();\n      this.setState({\n        active: false\n      });\n    }\n  }\n\n  onDrop(data) {\n    if (this.props.disabled) return;\n    if (this.props.onDrop) this.props.onDrop(data);\n    this.setState({\n      active: false\n    });\n  }\n\n  static contextTypes = {\n    dragContext: PropTypes.any\n  };\n\n  render() {\n    return (\n      <View\n        style={this.props.style}\n        pointerEvents={this.props.pointerEvents}\n        onLayout={this.reportMeasurements}\n        ref=\"wrapper\"\n      >\n        {React.Children.map(this.props.children, child => {\n          return React.cloneElement(\n            child,\n            Object.assign({}, this.props, { dragOver: this.state.active })\n          );\n        })}\n      </View>\n    );\n  }\n}\n\nexport default DropZone;\n"],"version":3}