{"version":3,"sources":["DropZone.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, TouchableOpacity } from 'react-native';\nimport PropTypes from 'prop-types';\n\nclass DropZone extends React.Component {\n  constructor(props) {\n    super(props);\n    this.displayName = 'DropZone';\n    this.state = {};\n    this.reportMeasurements = this.reportMeasurements.bind(this);\n    this.onEnter = this.onEnter.bind(this);\n    this.onLeave = this.onLeave.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  reportMeasurements() {\n    if (this.props.dragging)\n      this.context.dragContext.removeZone(this.refs.wrapper);\n    this.refs.wrapper.measure((_, __, width, height, x, y) => {\n      if (!this.props.dragging)\n        this.context.dragContext.updateZone({\n          width,\n          height,\n          x,\n          y,\n          ref: this.refs.wrapper,\n          onEnter: this.onEnter,\n          onLeave: this.onLeave,\n          onDrop: this.onDrop\n        });\n    });\n  }\n\n  static propTypes = {\n    onEnter: PropTypes.func,\n    onLeave: PropTypes.func,\n    onDrop: PropTypes.func\n  };\n\n  componentDidMount() {\n    this.reportMeasurements();\n    this._timer = setInterval(this.reportMeasurements, 1000);\n  }\n\n  componentWillUnmount() {\n    this.context.dragContext.removeZone(this.refs.wrapper);\n    clearInterval(this._timer);\n  }\n  componentDidUpdate() {\n    this.reportMeasurements();\n  }\n\n  onEnter({ x, y }) {\n    if (this.props.disabled) return;\n    if (!this.state.active) {\n      if (this.props.onEnter) this.props.onEnter();\n      this.setState({\n        active: true\n      });\n    }\n  }\n\n  onLeave() {\n    if (this.props.disabled) return;\n    if (this.state.active) {\n      if (this.props.onLeave) this.props.onLeave();\n      this.setState({\n        active: false\n      });\n    }\n  }\n\n  onDrop(data) {\n    if (this.props.disabled) return;\n    if (this.props.onDrop) this.props.onDrop(data);\n    this.setState({\n      active: false\n    });\n  }\n\n  static contextTypes = {\n    dragContext: PropTypes.any\n  };\n\n  render() {\n    return (\n      <View\n        style={this.props.style}\n        pointerEvents={this.props.pointerEvents}\n        onLayout={this.reportMeasurements}\n        ref=\"wrapper\"\n      >\n        {React.Children.map(this.props.children, child => {\n          return React.cloneElement(\n            child,\n            Object.assign({}, this.props, { dragOver: this.state.active })\n          );\n        })}\n      </View>\n    );\n  }\n}\n\nexport default DropZone;\n"],"sourceRoot":""}