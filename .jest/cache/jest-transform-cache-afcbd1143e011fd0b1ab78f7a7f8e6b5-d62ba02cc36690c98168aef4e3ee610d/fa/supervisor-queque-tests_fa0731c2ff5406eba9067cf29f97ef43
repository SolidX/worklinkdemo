083648131b4a4c0d883c275a5c540b59
"use strict";

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

const enzyme_1 = require("enzyme");

const react_1 = __importDefault(require("react")); // imported as a connected component!


const SupervisorQueueScreen_1 = __importDefault(require("../SupervisorQueueScreen"));

const middlewares = []; // you can mock any middlewares here if necessary
// const mockStore = configureStore(middlewares);

const initialState = {
  teamMembers: [],
  error: ''
}; // describe('Testing SupervisorQueueScreen', () => {
//   it('renders as expected', () => {
//     const wrapper = shallow(
//       <SupervisorQueueScreen />
//       // { context: { store: mockStore(initialState) } },
//     );
//     expect(wrapper.dive()).toMatchSnapshot();
//   });
// });
// jest.mock('react-native', () => require('react-native-mock'), {
//   virtual: true
// });

describe('SupervisorQueueScreen rendering', () => {
  const container = enzyme_1.shallow(react_1.default.createElement(SupervisorQueueScreen_1.default, null));
  it('should render a <DragContainer/>', () => {
    expect(container).toMatchSnapshot();
  }); //   it('renders correctly', () => {
  //     const tree = renderer.create(<SupervisorQueueScreen />).toJSON();
  //     expect(tree).toMatchSnapshot();
  //   });
}); //# sourceMappingURL=supervisor-queque-tests.js.map
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN1cGVydmlzb3ItcXVlcXVlLXRlc3RzLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQSxNQUFBLFFBQUEsR0FBQSxPQUFBLENBQUEsUUFBQSxDQUFBOztBQUNBLE1BQUEsT0FBQSxHQUFBLGVBQUEsQ0FBQSxPQUFBLENBQUEsT0FBQSxDQUFBLENBQUEsQyxDQUtBOzs7QUFDQSxNQUFBLHVCQUFBLEdBQUEsZUFBQSxDQUFBLE9BQUEsQ0FBQSwwQkFBQSxDQUFBLENBQUE7O0FBRUEsTUFBTSxXQUFXLEdBQUcsRUFBcEIsQyxDQUF3QjtBQUN4Qjs7QUFFQSxNQUFNLFlBQVksR0FBRztBQUNuQixFQUFBLFdBQVcsRUFBRSxFQURNO0FBRW5CLEVBQUEsS0FBSyxFQUFFO0FBRlksQ0FBckIsQyxDQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQSxRQUFRLENBQUMsaUNBQUQsRUFBb0MsTUFBSztBQUMvQyxRQUFNLFNBQVMsR0FBRyxRQUFBLENBQUEsT0FBQSxDQUFRLE9BQUEsQ0FBQSxPQUFBLENBQUEsYUFBQSxDQUFDLHVCQUFBLENBQUEsT0FBRCxFQUFzQixJQUF0QixDQUFSLENBQWxCO0FBQ0EsRUFBQSxFQUFFLENBQUMsa0NBQUQsRUFBcUMsTUFBSztBQUMxQyxJQUFBLE1BQU0sQ0FBQyxTQUFELENBQU4sQ0FBa0IsZUFBbEI7QUFDRCxHQUZDLENBQUYsQ0FGK0MsQ0FLL0M7QUFDQTtBQUNBO0FBQ0E7QUFDRCxDQVRPLENBQVIsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNoYWxsb3cgfSBmcm9tICdlbnp5bWUnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0Jztcbi8vIGltcG9ydCBjb25maWd1cmVTdG9yZSBmcm9tICdyZWR1eC1tb2NrLXN0b3JlJztcbmltcG9ydCB7fSBmcm9tICd0cy1qZXN0JztcbmltcG9ydCByZW5kZXJlciBmcm9tICdyZWFjdC10ZXN0LXJlbmRlcmVyJztcblxuLy8gaW1wb3J0ZWQgYXMgYSBjb25uZWN0ZWQgY29tcG9uZW50IVxuaW1wb3J0IFN1cGVydmlzb3JRdWV1ZVNjcmVlbiBmcm9tICcuLi9TdXBlcnZpc29yUXVldWVTY3JlZW4nO1xuXG5jb25zdCBtaWRkbGV3YXJlcyA9IFtdOyAvLyB5b3UgY2FuIG1vY2sgYW55IG1pZGRsZXdhcmVzIGhlcmUgaWYgbmVjZXNzYXJ5XG4vLyBjb25zdCBtb2NrU3RvcmUgPSBjb25maWd1cmVTdG9yZShtaWRkbGV3YXJlcyk7XG5cbmNvbnN0IGluaXRpYWxTdGF0ZSA9IHtcbiAgdGVhbU1lbWJlcnM6IFtdLFxuICBlcnJvcjogJydcbn07XG5cbi8vIGRlc2NyaWJlKCdUZXN0aW5nIFN1cGVydmlzb3JRdWV1ZVNjcmVlbicsICgpID0+IHtcbi8vICAgaXQoJ3JlbmRlcnMgYXMgZXhwZWN0ZWQnLCAoKSA9PiB7XG4vLyAgICAgY29uc3Qgd3JhcHBlciA9IHNoYWxsb3coXG4vLyAgICAgICA8U3VwZXJ2aXNvclF1ZXVlU2NyZWVuIC8+XG4vLyAgICAgICAvLyB7IGNvbnRleHQ6IHsgc3RvcmU6IG1vY2tTdG9yZShpbml0aWFsU3RhdGUpIH0gfSxcbi8vICAgICApO1xuLy8gICAgIGV4cGVjdCh3cmFwcGVyLmRpdmUoKSkudG9NYXRjaFNuYXBzaG90KCk7XG4vLyAgIH0pO1xuLy8gfSk7XG4vLyBqZXN0Lm1vY2soJ3JlYWN0LW5hdGl2ZScsICgpID0+IHJlcXVpcmUoJ3JlYWN0LW5hdGl2ZS1tb2NrJyksIHtcbi8vICAgdmlydHVhbDogdHJ1ZVxuLy8gfSk7XG5kZXNjcmliZSgnU3VwZXJ2aXNvclF1ZXVlU2NyZWVuIHJlbmRlcmluZycsICgpID0+IHtcbiAgY29uc3QgY29udGFpbmVyID0gc2hhbGxvdyg8U3VwZXJ2aXNvclF1ZXVlU2NyZWVuIC8+KTtcbiAgaXQoJ3Nob3VsZCByZW5kZXIgYSA8RHJhZ0NvbnRhaW5lci8+JywgKCkgPT4ge1xuICAgIGV4cGVjdChjb250YWluZXIpLnRvTWF0Y2hTbmFwc2hvdCgpO1xuICB9KTtcbiAgLy8gICBpdCgncmVuZGVycyBjb3JyZWN0bHknLCAoKSA9PiB7XG4gIC8vICAgICBjb25zdCB0cmVlID0gcmVuZGVyZXIuY3JlYXRlKDxTdXBlcnZpc29yUXVldWVTY3JlZW4gLz4pLnRvSlNPTigpO1xuICAvLyAgICAgZXhwZWN0KHRyZWUpLnRvTWF0Y2hTbmFwc2hvdCgpO1xuICAvLyAgIH0pO1xufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9