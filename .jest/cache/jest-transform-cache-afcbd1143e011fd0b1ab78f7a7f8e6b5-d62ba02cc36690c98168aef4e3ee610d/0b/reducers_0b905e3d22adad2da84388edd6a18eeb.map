{"version":3,"sources":["reducers.ts"],"names":[],"mappings":";;;;IAAA;AACA;AACA;;AACA,MAAA,UAAA,GAAA,OAAA,CAAA,8BAAA,CAAA;;AACA,MAAA,SAAA,GAAA,OAAA,CAAA,6BAAA,CAAA;;AAIA,MAAA,UAAA,GAAA,OAAA,CAAA,+BAAA,CAAA,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAM,CAAC,UAAA,CAAA,OAAA,CAAQ,UAAA,CAAA,YAAR,EAAsB,SAAA,CAAA,gBAAA,CAAiB,UAAA,CAAA,QAAjB,CAAtB,CAAD,CAAN,CAA0D,eAA1D,G","sourcesContent":["// import { Action } from './actions';\n// import { ActionTypes } from './types';\n// import { ISuperQueueProps } from '../../React/screens/SupervisorQueueScreen';\nimport { initialState, reducer } from '../../drag-and-drop/reducers';\nimport {\n  selectTeamMember,\n  unSelectTeamMember\n} from '../../drag-and-drop/actions';\nimport { teamMembers, memberId } from '../../../config/jest/mockData';\n\n// export const initialState: ISuperQueueProps = {\n//   teamMembers: [],\n//   error: ''\n// };\n\n// export const reducer = (\n//   state: ISuperQueueProps = initialState,\n//   action: Action\n// ) => {\n//   const { teamMembers } = state;\n//   const SELECT = ActionTypes.SELECT_TEAM_MEMBER;\n//   const UNSELECT = ActionTypes.UNSELECT_TEAM_MEMBER;\n//   switch (action.type) {\n//     case SELECT || UNSELECT:\n//       const memberId = action.payload.memberId;\n//       // check if member is already in the team\n//       const memberIdPresent = teamMembers.some(\n//         member => member.id === memberId\n//       );\n//       // add member if not already there\n//       if (!memberIdPresent && SELECT) {\n//         return {\n//           ...state,\n//           teamMembers: [...state.teamMembers, { id: action.payload.memberId }]\n//         };\n//         // remove member if already there\n//       } else if (memberIdPresent && UNSELECT) {\n//         return {\n//           ...state,\n//           teamMembers: teamMembers.filter(member => member.id !== memberId)\n//         };\n//       } else {\n//         return { ...state, error: 'oops' };\n//       }\n//     default:\n//       return state;\n//   }\n// };\n\nexpect(reducer(initialState, selectTeamMember(memberId))).toMatchSnapshot();\n"],"sourceRoot":""}