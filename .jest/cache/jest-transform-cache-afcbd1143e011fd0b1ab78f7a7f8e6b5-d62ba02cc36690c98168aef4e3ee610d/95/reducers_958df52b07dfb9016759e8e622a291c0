e557057f8fcb21c41df1c37f5975f3d5
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

const types_1 = require("./types");

exports.initialState = {
  teamMembers: [],
  error: ''
};

exports.reducer = (state = exports.initialState, action) => {
  const {
    teamMembers
  } = state;
  const EDIT = types_1.ActionTypes.ADD_TEAM_MEMBER; // const REMOVE = ActionTypes.REMOVE_TEAM_MEMBER;

  let memberId;

  switch (action.type) {
    case EDIT:
      memberId = action.payload.memberId; // check if member is already in the team

      const memberIdPresent = teamMembers.some(member => member.id === memberId); // add member if not already there

      if (!memberIdPresent) {
        return Object.assign({}, state, {
          teamMembers: [...state.teamMembers, {
            id: action.payload.memberId
          }]
        }); // remove member if already there
      } else if (memberIdPresent) {
        return Object.assign({}, state, {
          teamMembers: teamMembers.filter(member => member.id !== memberId)
        });
      } else {
        return Object.assign({}, state, {
          error: 'oops'
        });
      }

    // case REMOVE:
    //   memberId = action.payload.memberId;
    //         return {
    //     ...state,
    //     teamMembers: teamMembers.filter(member => member.id !== memberId)
    //   };

    default:
      return state;
  }
}; //# sourceMappingURL=reducers.js.map
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZHVjZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUNBLE1BQUEsT0FBQSxHQUFBLE9BQUEsQ0FBQSxTQUFBLENBQUE7O0FBR2EsT0FBQSxDQUFBLFlBQUEsR0FBaUM7QUFDNUMsRUFBQSxXQUFXLEVBQUUsRUFEK0I7QUFFNUMsRUFBQSxLQUFLLEVBQUU7QUFGcUMsQ0FBakM7O0FBS0EsT0FBQSxDQUFBLE9BQUEsR0FBVSxDQUNyQixLQUFBLEdBQTBCLE9BQUEsQ0FBQSxZQURMLEVBRXJCLE1BRnFCLEtBR25CO0FBQ0YsUUFBTTtBQUFFLElBQUE7QUFBRixNQUFrQixLQUF4QjtBQUNBLFFBQU0sSUFBSSxHQUFHLE9BQUEsQ0FBQSxXQUFBLENBQVksZUFBekIsQ0FGRSxDQUdGOztBQUNBLE1BQUksUUFBSjs7QUFDQSxVQUFRLE1BQU0sQ0FBQyxJQUFmO0FBQ0UsU0FBSyxJQUFMO0FBQ0UsTUFBQSxRQUFRLEdBQUcsTUFBTSxDQUFDLE9BQVAsQ0FBZSxRQUExQixDQURGLENBRUU7O0FBQ0EsWUFBTSxlQUFlLEdBQUcsV0FBVyxDQUFDLElBQVosQ0FDdEIsTUFBTSxJQUFJLE1BQU0sQ0FBQyxFQUFQLEtBQWMsUUFERixDQUF4QixDQUhGLENBTUU7O0FBQ0EsVUFBSSxDQUFDLGVBQUwsRUFBc0I7QUFDcEIsZUFBQSxNQUFBLENBQUEsTUFBQSxDQUFBLEVBQUEsRUFDSyxLQURMLEVBQ1U7QUFDUixVQUFBLFdBQVcsRUFBRSxDQUFDLEdBQUcsS0FBSyxDQUFDLFdBQVYsRUFBdUI7QUFBRSxZQUFBLEVBQUUsRUFBRSxNQUFNLENBQUMsT0FBUCxDQUFlO0FBQXJCLFdBQXZCO0FBREwsU0FEVixDQUFBLENBRG9CLENBS3BCO0FBQ0QsT0FORCxNQU1PLElBQUksZUFBSixFQUFxQjtBQUMxQixlQUFBLE1BQUEsQ0FBQSxNQUFBLENBQUEsRUFBQSxFQUNLLEtBREwsRUFDVTtBQUNSLFVBQUEsV0FBVyxFQUFFLFdBQVcsQ0FBQyxNQUFaLENBQW1CLE1BQU0sSUFBSSxNQUFNLENBQUMsRUFBUCxLQUFjLFFBQTNDO0FBREwsU0FEVixDQUFBO0FBSUQsT0FMTSxNQUtBO0FBQ0wsZUFBQSxNQUFBLENBQUEsTUFBQSxDQUFBLEVBQUEsRUFBWSxLQUFaLEVBQWlCO0FBQUUsVUFBQSxLQUFLLEVBQUU7QUFBVCxTQUFqQixDQUFBO0FBQ0Q7O0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0UsYUFBTyxLQUFQO0FBN0JKO0FBK0JELENBdkNZLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBY3Rpb24gfSBmcm9tICcuL2FjdGlvbnMnO1xuaW1wb3J0IHsgQWN0aW9uVHlwZXMgfSBmcm9tICcuL3R5cGVzJztcbmltcG9ydCB7IElTdXBlclF1ZXVlUHJvcHMgfSBmcm9tICcuLi8uLi9SZWFjdC9zY3JlZW5zL1N1cGVydmlzb3JRdWV1ZVNjcmVlbic7XG5cbmV4cG9ydCBjb25zdCBpbml0aWFsU3RhdGU6IElTdXBlclF1ZXVlUHJvcHMgPSB7XG4gIHRlYW1NZW1iZXJzOiBbXSxcbiAgZXJyb3I6ICcnXG59O1xuXG5leHBvcnQgY29uc3QgcmVkdWNlciA9IChcbiAgc3RhdGU6IElTdXBlclF1ZXVlUHJvcHMgPSBpbml0aWFsU3RhdGUsXG4gIGFjdGlvbjogQWN0aW9uXG4pID0+IHtcbiAgY29uc3QgeyB0ZWFtTWVtYmVycyB9ID0gc3RhdGU7XG4gIGNvbnN0IEVESVQgPSBBY3Rpb25UeXBlcy5BRERfVEVBTV9NRU1CRVI7XG4gIC8vIGNvbnN0IFJFTU9WRSA9IEFjdGlvblR5cGVzLlJFTU9WRV9URUFNX01FTUJFUjtcbiAgbGV0IG1lbWJlcklkO1xuICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgY2FzZSBFRElUOlxuICAgICAgbWVtYmVySWQgPSBhY3Rpb24ucGF5bG9hZC5tZW1iZXJJZDtcbiAgICAgIC8vIGNoZWNrIGlmIG1lbWJlciBpcyBhbHJlYWR5IGluIHRoZSB0ZWFtXG4gICAgICBjb25zdCBtZW1iZXJJZFByZXNlbnQgPSB0ZWFtTWVtYmVycy5zb21lKFxuICAgICAgICBtZW1iZXIgPT4gbWVtYmVyLmlkID09PSBtZW1iZXJJZFxuICAgICAgKTtcbiAgICAgIC8vIGFkZCBtZW1iZXIgaWYgbm90IGFscmVhZHkgdGhlcmVcbiAgICAgIGlmICghbWVtYmVySWRQcmVzZW50KSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgICAgdGVhbU1lbWJlcnM6IFsuLi5zdGF0ZS50ZWFtTWVtYmVycywgeyBpZDogYWN0aW9uLnBheWxvYWQubWVtYmVySWQgfV1cbiAgICAgICAgfTtcbiAgICAgICAgLy8gcmVtb3ZlIG1lbWJlciBpZiBhbHJlYWR5IHRoZXJlXG4gICAgICB9IGVsc2UgaWYgKG1lbWJlcklkUHJlc2VudCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgIHRlYW1NZW1iZXJzOiB0ZWFtTWVtYmVycy5maWx0ZXIobWVtYmVyID0+IG1lbWJlci5pZCAhPT0gbWVtYmVySWQpXG4gICAgICAgIH07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4geyAuLi5zdGF0ZSwgZXJyb3I6ICdvb3BzJyB9O1xuICAgICAgfVxuICAgIC8vIGNhc2UgUkVNT1ZFOlxuICAgIC8vICAgbWVtYmVySWQgPSBhY3Rpb24ucGF5bG9hZC5tZW1iZXJJZDtcbiAgICAvLyAgICAgICAgIHJldHVybiB7XG4gICAgLy8gICAgIC4uLnN0YXRlLFxuICAgIC8vICAgICB0ZWFtTWVtYmVyczogdGVhbU1lbWJlcnMuZmlsdGVyKG1lbWJlciA9PiBtZW1iZXIuaWQgIT09IG1lbWJlcklkKVxuICAgIC8vICAgfTtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIHN0YXRlO1xuICB9XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==