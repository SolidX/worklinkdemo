8bab76e29480e4f3384fd7db15eec5f5
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

const types_1 = require("./types");

exports.initialState = {
  teamMembers: [],
  error: ''
};

exports.reducer = (state = exports.initialState, action) => {
  const {
    teamMembers
  } = state;
  const ADD = types_1.ActionTypes.ADD_TEAM_MEMBER;
  const REMOVE = types_1.ActionTypes.REMOVE_TEAM_MEMBER;

  switch (action.type) {
    case ADD || REMOVE:
      const memberId = action.payload.memberId; // check if member is already in the team

      const memberIdPresent = teamMembers.some(member => member.id === memberId); //console.log('outside!!', teamMembers, memberId, action.type);
      // add member if not already there

      if (!memberIdPresent && ADD) {
        console.log('addddd');
        return Object.assign({}, state, {
          teamMembers: [...state.teamMembers, {
            id: action.payload.memberId
          }]
        }); // remove member if already there
      } else if (memberIdPresent && REMOVE) {
        console.log('removveee');
        return Object.assign({}, state, {
          teamMembers: teamMembers.filter(member => member.id !== memberId)
        });
      } else {
        return Object.assign({}, state, {
          error: 'oops'
        });
      }

    default:
      return state;
  }
}; //# sourceMappingURL=reducers.js.map
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZHVjZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUNBLE1BQUEsT0FBQSxHQUFBLE9BQUEsQ0FBQSxTQUFBLENBQUE7O0FBR2EsT0FBQSxDQUFBLFlBQUEsR0FBaUM7QUFDNUMsRUFBQSxXQUFXLEVBQUUsRUFEK0I7QUFFNUMsRUFBQSxLQUFLLEVBQUU7QUFGcUMsQ0FBakM7O0FBS0EsT0FBQSxDQUFBLE9BQUEsR0FBVSxDQUNyQixLQUFBLEdBQTBCLE9BQUEsQ0FBQSxZQURMLEVBRXJCLE1BRnFCLEtBR25CO0FBQ0YsUUFBTTtBQUFFLElBQUE7QUFBRixNQUFrQixLQUF4QjtBQUNBLFFBQU0sR0FBRyxHQUFHLE9BQUEsQ0FBQSxXQUFBLENBQVksZUFBeEI7QUFDQSxRQUFNLE1BQU0sR0FBRyxPQUFBLENBQUEsV0FBQSxDQUFZLGtCQUEzQjs7QUFDQSxVQUFRLE1BQU0sQ0FBQyxJQUFmO0FBQ0UsU0FBSyxHQUFHLElBQUksTUFBWjtBQUNFLFlBQU0sUUFBUSxHQUFHLE1BQU0sQ0FBQyxPQUFQLENBQWUsUUFBaEMsQ0FERixDQUVFOztBQUNBLFlBQU0sZUFBZSxHQUFHLFdBQVcsQ0FBQyxJQUFaLENBQ3RCLE1BQU0sSUFBSSxNQUFNLENBQUMsRUFBUCxLQUFjLFFBREYsQ0FBeEIsQ0FIRixDQU1FO0FBRUE7O0FBQ0EsVUFBSSxDQUFDLGVBQUQsSUFBb0IsR0FBeEIsRUFBNkI7QUFDM0IsUUFBQSxPQUFPLENBQUMsR0FBUixDQUFZLFFBQVo7QUFFQSxlQUFBLE1BQUEsQ0FBQSxNQUFBLENBQUEsRUFBQSxFQUNLLEtBREwsRUFDVTtBQUNSLFVBQUEsV0FBVyxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUMsV0FBVixFQUF1QjtBQUFFLFlBQUEsRUFBRSxFQUFFLE1BQU0sQ0FBQyxPQUFQLENBQWU7QUFBckIsV0FBdkI7QUFETCxTQURWLENBQUEsQ0FIMkIsQ0FPM0I7QUFDRCxPQVJELE1BUU8sSUFBSSxlQUFlLElBQUksTUFBdkIsRUFBK0I7QUFDcEMsUUFBQSxPQUFPLENBQUMsR0FBUixDQUFZLFdBQVo7QUFFQSxlQUFBLE1BQUEsQ0FBQSxNQUFBLENBQUEsRUFBQSxFQUNLLEtBREwsRUFDVTtBQUNSLFVBQUEsV0FBVyxFQUFFLFdBQVcsQ0FBQyxNQUFaLENBQW1CLE1BQU0sSUFBSSxNQUFNLENBQUMsRUFBUCxLQUFjLFFBQTNDO0FBREwsU0FEVixDQUFBO0FBSUQsT0FQTSxNQU9BO0FBQ0wsZUFBQSxNQUFBLENBQUEsTUFBQSxDQUFBLEVBQUEsRUFBWSxLQUFaLEVBQWlCO0FBQUUsVUFBQSxLQUFLLEVBQUU7QUFBVCxTQUFqQixDQUFBO0FBQ0Q7O0FBQ0g7QUFDRSxhQUFPLEtBQVA7QUE3Qko7QUErQkQsQ0F0Q1ksQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFjdGlvbiB9IGZyb20gJy4vYWN0aW9ucyc7XG5pbXBvcnQgeyBBY3Rpb25UeXBlcyB9IGZyb20gJy4vdHlwZXMnO1xuaW1wb3J0IHsgSVN1cGVyUXVldWVQcm9wcyB9IGZyb20gJy4uLy4uL1JlYWN0L3NjcmVlbnMvU3VwZXJ2aXNvclF1ZXVlU2NyZWVuJztcblxuZXhwb3J0IGNvbnN0IGluaXRpYWxTdGF0ZTogSVN1cGVyUXVldWVQcm9wcyA9IHtcbiAgdGVhbU1lbWJlcnM6IFtdLFxuICBlcnJvcjogJydcbn07XG5cbmV4cG9ydCBjb25zdCByZWR1Y2VyID0gKFxuICBzdGF0ZTogSVN1cGVyUXVldWVQcm9wcyA9IGluaXRpYWxTdGF0ZSxcbiAgYWN0aW9uOiBBY3Rpb25cbikgPT4ge1xuICBjb25zdCB7IHRlYW1NZW1iZXJzIH0gPSBzdGF0ZTtcbiAgY29uc3QgQUREID0gQWN0aW9uVHlwZXMuQUREX1RFQU1fTUVNQkVSO1xuICBjb25zdCBSRU1PVkUgPSBBY3Rpb25UeXBlcy5SRU1PVkVfVEVBTV9NRU1CRVI7XG4gIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcbiAgICBjYXNlIEFERCB8fCBSRU1PVkU6XG4gICAgICBjb25zdCBtZW1iZXJJZCA9IGFjdGlvbi5wYXlsb2FkLm1lbWJlcklkO1xuICAgICAgLy8gY2hlY2sgaWYgbWVtYmVyIGlzIGFscmVhZHkgaW4gdGhlIHRlYW1cbiAgICAgIGNvbnN0IG1lbWJlcklkUHJlc2VudCA9IHRlYW1NZW1iZXJzLnNvbWUoXG4gICAgICAgIG1lbWJlciA9PiBtZW1iZXIuaWQgPT09IG1lbWJlcklkXG4gICAgICApO1xuICAgICAgLy9jb25zb2xlLmxvZygnb3V0c2lkZSEhJywgdGVhbU1lbWJlcnMsIG1lbWJlcklkLCBhY3Rpb24udHlwZSk7XG5cbiAgICAgIC8vIGFkZCBtZW1iZXIgaWYgbm90IGFscmVhZHkgdGhlcmVcbiAgICAgIGlmICghbWVtYmVySWRQcmVzZW50ICYmIEFERCkge1xuICAgICAgICBjb25zb2xlLmxvZygnYWRkZGRkJyk7XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICB0ZWFtTWVtYmVyczogWy4uLnN0YXRlLnRlYW1NZW1iZXJzLCB7IGlkOiBhY3Rpb24ucGF5bG9hZC5tZW1iZXJJZCB9XVxuICAgICAgICB9O1xuICAgICAgICAvLyByZW1vdmUgbWVtYmVyIGlmIGFscmVhZHkgdGhlcmVcbiAgICAgIH0gZWxzZSBpZiAobWVtYmVySWRQcmVzZW50ICYmIFJFTU9WRSkge1xuICAgICAgICBjb25zb2xlLmxvZygncmVtb3Z2ZWVlJyk7XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICB0ZWFtTWVtYmVyczogdGVhbU1lbWJlcnMuZmlsdGVyKG1lbWJlciA9PiBtZW1iZXIuaWQgIT09IG1lbWJlcklkKVxuICAgICAgICB9O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHsgLi4uc3RhdGUsIGVycm9yOiAnb29wcycgfTtcbiAgICAgIH1cbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIHN0YXRlO1xuICB9XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==